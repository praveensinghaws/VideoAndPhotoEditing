{
	Tools = ordered() {
		EssentialFlippingNumbers = GroupOperator {
			Inputs = ordered() {
				Input1 = InstanceInput {
					SourceOp = "Text1",
					Source = "Font",
					ControlGroup = 1,
				},
				Input2 = InstanceInput {
					SourceOp = "Text1",
					Source = "Style",
					ControlGroup = 1,
				},
				Input7 = InstanceInput {
					SourceOp = "Text1",
					Source = "Size",
					Default = 0.5,
				},
				Input8 = InstanceInput {
					SourceOp = "Text1",
					Source = "CharacterSpacingClone",
					Name = "Tracking",
					Default = 1,
				},
				InputPanelCenter = InstanceInput {
					SourceOp = "NumPanel",
					Source = "Center",
				},
				InputTextCenter = InstanceInput {
					SourceOp = "Text1",
					Source = "Offset1",
					Name = "Offset",
					DefaultX = 0,
					DefaultY = 0,
				},
				Input3 = InstanceInput {
					SourceOp = "Text1",
					Source = "Red1",
					Name = "Color",
					ControlGroup = 2,
					Default = 1,
				},
				Input4 = InstanceInput {
					SourceOp = "Text1",
					Source = "Green1",
					ControlGroup = 2,
					Default = 1,
				},
				Input5 = InstanceInput {
					SourceOp = "Text1",
					Source = "Blue1",
					ControlGroup = 2,
					Default = 1,
				},
				Input6 = InstanceInput {
					SourceOp = "Text1",
					Source = "Alpha1",
					ControlGroup = 2,
					Default = 1,
				},
				inputLabelBackground = InstanceInput {
					SourceOp = "Merge1",
					Source = "LabelBackground",
				},
				Input11 = InstanceInput {
					SourceOp = "NumPanel",
					Source = "Width",
					Default = 0.4,
				},
				Input12 = InstanceInput {
					SourceOp = "NumPanel",
					Source = "Height",
					Default = 0.6,
				},
				InputCornerRadius = InstanceInput {
					SourceOp = "NumPanel",
					Source = "CornerRadius",
				},
				Input13 = InstanceInput {
					SourceOp = "Background1",
					Source = "TopLeftRed",
					Name = "Color",
					ControlGroup = 9,
					Default = 1,
				},
				Input14 = InstanceInput {
					SourceOp = "Background1",
					Source = "TopLeftGreen",
					ControlGroup = 9,
					Default = 0.386,
				},
				Input15 = InstanceInput {
					SourceOp = "Background1",
					Source = "TopLeftBlue",
					ControlGroup = 9,
					Default = 0,
				},
				Input16 = InstanceInput {
					SourceOp = "Background1",
					Source = "TopLeftAlpha",
					ControlGroup = 9,
					Default = 1,
				},
				inputLabelAnimation = InstanceInput {
					SourceOp = "Merge1",
					Source = "LabelAnimation",
				},
				InputEnableAnimation = InstanceInput {
					SourceOp = "Merge1",
					Source = "EnableAnimation",
				},
				Input17 = InstanceInput {
					SourceOp = "Merge1",
					Source = "StartNumber",
				},
				InputResetNumber = InstanceInput {
					SourceOp = "Merge1",
					Source = "ResetNumber",
				},
				inputTwoDigits = InstanceInput {
					SourceOp = "Merge1",
					Source = "TwoDigits",
				},
				Input19 = InstanceInput {
					SourceOp = "Merge1",
					Source = "CountDown",
				},
				InputAutoInterval = InstanceInput {
					SourceOp = "Merge1",
					Source = "AutoInterval",
				},
				InputHideInterval = InstanceInput {
					SourceOp = "Merge1",
					Source = "Hide_ManualInterval",
					Expression = "AutoInterval==0 and 1 or 0",
				},
				Input18 = InstanceInput {
					SourceOp = "Merge1",
					Source = "Interval",
					Default = 1,
				},
				Input20 = InstanceInput {
					SourceOp = "AnimCurves1",
					Source = "Curve",
				},
				Input21 = InstanceInput {
					SourceOp = "AnimCurves1",
					Source = "EaseIn",
					Width = 0.5,
				},
				Input22 = InstanceInput {
					SourceOp = "AnimCurves1",
					Source = "EaseOut",
					Width = 0.5,
				},
				Input23 = InstanceInput {
					SourceOp = "AnimCurves1",
					Source = "Lookup",
					ControlGroup = 16,
				}
			},
			Outputs = {
				MainOutput1 = InstanceOutput {
					SourceOp = "ChannelBooleans1",
					Source = "Output",
				}
			},
			ViewInfo = GroupInfo {
				Pos = { -330, 49.5 },
				Flags = {
					AllowPan = false,
					GridSnap = true,
					AutoSnap = true,
					RemoveRouters = true
				},
				Size = { 994.627, 338.509, 569.311, 69.502 },
				Direction = "Horizontal",
				PipeStyle = "Direct",
				Scale = 1,
				Offset = { 0, 0 }
			},
			Tools = ordered() {
				Text1 = TextPlus {
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 149, },
						Width = Input { Value = 3840, },
						Height = Input { Value = 2160, },
						Center = Input { Expression = "NumPanel.Center", },
						UseFrameFormatSettings = Input { Value = 1, },
						["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, },
						LayoutRotation = Input { Value = 1, },
						TransformRotation = Input { Value = 1, },
						Softness1 = Input { Value = 1, },
						StyledText = Input { Expression = ":f=iif(Merge1.TwoDigits==1, '%02d','%d'); return string.format(f, Merge1.CurrentNumber)", },
						Font = Input { Value = "Open Sans", },
						Style = Input { Value = "Bold", },
						Size = Input { Value = 0.5, },
						VerticalJustificationNew = Input { Value = 3, },
						HorizontalJustificationNew = Input { Value = 3, },
						ElementShape5 = Input { Value = 2, },
						Level5 = Input { Value = 2, },
						Green5 = Input { Value = 0.386, },
						Blue5 = Input { Value = 0, },
						Softness5 = Input { Value = 1, },
					},
					ViewInfo = OperatorInfo { Pos = { -440, 16.5 } },
				},
				Text2 = TextPlus {
					NameSet = true,
					SourceOp = "Text1",
					Inputs = {
						EffectMask = Input { },
						SettingsNest = Input { },
						ImageNest = Input { },
						["Gamut.ColorSpaceNest"] = Input { },
						["Gamut.GammaSpaceNest"] = Input { },
						Layout = Input { },
						LayoutRotation = Input { Value = 1, },
						Background = Input { },
						TransformTransform = Input { },
						TransformRotation = Input { Value = 1, },
						TransformShear = Input { },
						TransformSize = Input { },
						Properties1 = Input { },
						Softness1 = Input { Value = 1, },
						Position1 = Input { },
						Rotation1 = Input { },
						Shear1 = Input { },
						Size1 = Input { },
						TextText = Input { },
						StyledText = Input { Expression = ":f=iif(Merge1.TwoDigits==1, '%02d','%d'); return string.format(f, Merge1.NextNumber)" },
						TabSpacing = Input { },
						AdvancedFontControls = Input { },
						ClearSelectedKerning = Input { },
						ClearAllKerning = Input { },
						ClearSelectedPlacement = Input { },
						ClearAllPlacement = Input { },
						Internal = Input { },
						CommentsNest = Input { },
						FrameRenderScriptNest = Input { },
						StartRenderScripts = Input { },
						EndRenderScripts = Input { },
						Properties5 = Input { },
						Softness5 = Input { Value = 1, },
						Position5 = Input { },
						Rotation5 = Input { },
						Shear5 = Input { },
						Size5 = Input { },
					},
					ViewInfo = OperatorInfo { Pos = { -440, 148.5 } },
				},
				BrightnessContrast1 = BrightnessContrast {
					Inputs = {
						Gain = Input {
							Value = 0.345491502812526,
							Expression = "1-Merge1.AnimValue",
						},
						Input = Input {
							SourceOp = "Merge2",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -110, 16.5 } },
				},
				Merge1 = Merge {
					Inputs = {
						AnimValue1 = Input {
							Value = 0.7033683215379,
							Expression = "(1 - math.cos((CurrentTime%CalcInterval)/CalcInterval * math.pi)) / 2",
						},
						Background = Input {
							SourceOp = "Merge3",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "DVE1",
							Source = "Output",
						},
						PerformDepthMerge = Input { Value = 0, },
						CalcInterval = Input { Expression = ":v={Interval*FrameRate, FrameRate, FrameRate*60}; return v[AutoInterval+1]", },
						FrameRate = Input {
							Value = 30,
							Expression = "comp:GetPrefs(\"Comp.FrameFormat.Rate\")",
						},
						CurrentTime = Input {
							Value = 49,
							Expression = "time-comp.RenderStart",
						},
						Interval = Input { Value = 1, },
						CurrentNumber = Input {
							Value = 1,
							Expression = ":if EnableAnimation==0 then return StartNumber end; n=floor(CurrentTime/CalcInterval)*iif(CountDown==1,-1,1)+StartNumber; if ResetNumber==0 then return n end; n=n%ResetNumber; if (n<0) then n=ResetNumber+n end; return n",
						},
						AnimValue = Input {
							SourceOp = "AnimCurves1",
							Source = "Value",
							Expression = "EnableAnimation==0 and 0 or AnimCurves1.Value",
						},
						NextNumber = Input {
							Value = 2,
							Expression = ":if EnableAnimation==0 then return StartNumber end; n=CurrentNumber+iif(CountDown==1,-1,1); if ResetNumber==0 then return n end; n=n%ResetNumber; if (n<0) then n=ResetNumber+n end; return n",
						},
						Hide_ManualInterval = Input { Expression = "AutoInterval==0 and 1 or 0", },
					},
					ViewInfo = OperatorInfo { Pos = { 0, 148.5 } },
					UserControls = ordered() {
						StartNumber = {
							INP_MaxAllowed = 1000000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							INP_MaxScale = 60,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							INP_External = false,
							LINKS_Name = "Start Number",
						},
						ResetNumber = {
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							INP_MaxScale = 60,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							INP_Default = 60,
							LINKID_DataType = "Number",
							INP_External = false,
							LINKS_Name = "Reset Number",
						},
						CalcInterval = {
							INP_Integer = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 60,
							LINKS_Name = "Calc Interval",
						},
						FrameRate = {
							INP_Integer = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 60,
							LINKS_Name = "FrameRate",
						},
						CurrentTime = {
							INP_Integer = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 100,
							LINKS_Name = "CurrentTime",
						},
						Interval = {
							INP_Integer = fals,
							INP_External = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 5,
							LINKS_Name = "Interval",
						},
						CurrentNumber = {
							INP_MaxAllowed = 1000000,
							INP_Integer = true,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 100,
							LINKS_Name = "Current Number",
						},
						AnimValue = {
							INP_Integer = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 1,
							LINKS_Name = "AnimValue",
						},
						CountDown = {
							CBC_TriState = false,
							INP_Integer = false,
							INP_External = false,
							LINKID_DataType = "Number",
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Count Down",
						},
						NextNumber = {
							INP_Integer = true,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 0,
							INP_MaxScale = 100,
							LINKS_Name = "Next Number",
						},
						LabelAnimation = {
							INP_Integer = false,
							LBLC_DropDownButton = true,
							LINKID_DataType = "Number",
							LBLC_NumInputs = 12,
							INP_Default = 1,
							INPID_InputControl = "LabelControl",
							LINKS_Name = "Animation",
						},
						LabelBackground = {
							INP_Integer = false,
							LBLC_DropDownButton = true,
							LINKID_DataType = "Number",
							LBLC_NumInputs = 7,
							INP_Default = 1,
							INPID_InputControl = "LabelControl",
							LINKS_Name = "Background",
						},
						TwoDigits = {
							CBC_TriState = false,
							INP_Integer = false,
							INP_External = false,
							LINKID_DataType = "Number",
							INP_Default = 1,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Two Digits",
						},
						AutoInterval = {
							{ MBTNC_AddButton = "Manual" },
							{ MBTNC_AddButton = "Second" },
							{ MBTNC_AddButton = "Minute" },
							INPID_InputControl = "MultiButtonControl",
							MBTNC_ShowBasicButton = true,
							INP_Default = 1,
							INP_External = false,
							LINKID_DataType = "Number",
							MBTNC_ShowName = false,
							MBTNC_StretchToFit = true,
							MBTNC_ShowToolTip = false,
							LINKS_Name = "Auto Interval",
						},
						EnableAnimation = {
							CBC_TriState = false,
							INP_Integer = false,
							INP_External = false,
							LINKID_DataType = "Number",
							INP_Default = 1,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Enable Animation",
						},
						Hide_ManualInterval = {
							LBLC_NumInputs = 1,
							IC_Visible = false,
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
						}
					}
				},
				AnimCurves1 = LUTLookup {
					CtrlWZoom = false,
					Inputs = {
						Source = Input { Value = FuID { "Custom" }, },
						Input = Input {
							SourceOp = "AnimCurvesonMerge1Input",
							Source = "Value",
						},
						Curve = Input { Value = FuID { "Easing" }, },
						EaseIn = Input { Value = FuID { "Sine" }, },
						EaseOut = Input { Value = FuID { "Sine" }, },
						Lookup = Input {
							SourceOp = "AnimCurvesonMerge1Lookup",
							Source = "Value",
						},
						TimeScale = Input { Expression = "30/Merge1.CalcInterval", },
					},
				},
				AnimCurvesonMerge1Input = BezierSpline {
					SplineColor = { Red = 7, Green = 232, Blue = 213 },
					KeyFrames = {
						[0] = { 0, RH = { 10, 0.333333333333333 }, Flags = { Linear = true, Loop = true } },
						[30] = { 1, LH = { 20, 0.666666666666667 }, Flags = { Linear = true, Loop = true } }
					}
				},
				AnimCurvesonMerge1Lookup = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0, RH = { 0.333333333333333, 0.333333333333333 }, Flags = { Linear = true } },
							[1] = { 1, LH = { 0.666666666666667, 0.666666666666667 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 255, Green = 255, Blue = 255 },
				},
				DVE1 = DVE {
					Inputs = {
						EffectMask = Input {
							SourceOp = "Rectangle1",
							Source = "Mask",
						},
						Pivot = Input { Expression = "NumPanel.Center", },
						Quality = Input { Value = 6, },
						XRotation = Input {
							Value = 90,
							Expression = "min(Merge1.AnimValue*180, 90)",
						},
						AlphaMode = Input { Value = 2, },
						Input = Input {
							SourceOp = "BrightnessContrast1",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { 0, 16.5 } },
				},
				DVE2 = DVE {
					Inputs = {
						EffectMask = Input {
							SourceOp = "Rectangle2",
							Source = "Mask",
						},
						Pivot = Input { Expression = "NumPanel.Center", },
						XRotation = Input {
							Value = -62.1884705062547,
							Expression = "max(-90, Merge1.AnimValue*180-180)",
						},
						AlphaMode = Input { Value = 2, },
						Input = Input {
							SourceOp = "Merge3",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { 0, 214.5 } },
				},
				Rectangle2 = RectangleMask {
					Inputs = {
						Filter = Input { Value = FuID { "Fast Gaussian" }, },
						MaskWidth = Input { Value = 3840, },
						MaskHeight = Input { Value = 2160, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { "None" }, },
						Center = Input { Expression = "NumPanel.Center - Point(0, Height/2)", },
						Width = Input { Value = 1, },
						Height = Input { Expression = "NumPanel.Height/2", }, 
					},
					ViewInfo = OperatorInfo { Pos = { 0, 181.5 } },
				},
				Rectangle1 = RectangleMask {
					Inputs = {
						Filter = Input { Value = FuID { "Fast Gaussian" }, },
						MaskWidth = Input { Value = 3840, },
						MaskHeight = Input { Value = 2160, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { "None" }, },
						Center = Input { Expression = "NumPanel.Center + Point(0, Height/2)", },
						Width = Input { Value = 1, },
						Height = Input { Expression = "NumPanel.Height/2", }, 
					},
					ViewInfo = OperatorInfo { Pos = { 0, -16.5 } },
				},
				Merge4 = Merge {
					Inputs = {
						EffectMask = Input {
							SourceOp = "Rectangle2",
							Source = "Mask",
						},
						Background = Input {
							SourceOp = "Merge1",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "DVE2",
							Source = "Output",
						},
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { 165, 148.5 } },
				},
				ChannelBooleans1 = ChannelBoolean {
					Inputs = {
						EffectMask = Input {
							SourceOp = "Rectangle3",
							Source = "Mask",
						},
						ApplyMaskInverted = Input { Value = 1, },
						MultiplyByMask = Input { Value = 1, },
						Background = Input {
							SourceOp = "Merge4",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { 275, 148.5 } },
				},
				Rectangle3 = RectangleMask {
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { "Fast Gaussian" }, },
						MaskWidth = Input { Value = 3840, },
						MaskHeight = Input { Value = 2160, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { "None" }, },
						Width = Input { Value = 1, },
						Height = Input { Value = 0.01, },
						Center = Input { Expression = "NumPanel.Center", },
					},
					ViewInfo = OperatorInfo { Pos = { 275, 82.5 } },
				},
				Background1 = Background {
					Inputs = {
						GlobalOut = Input { Value = 149, },
						Width = Input { Value = 3840, },
						Height = Input { Value = 2160, },
						UseFrameFormatSettings = Input { Value = 1, },
						["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, },
						TopLeftRed = Input { Value = 1, },
						TopLeftGreen = Input { Value = 0.386, },
						EffectMask = Input {
							SourceOp = "NumPanel",
							Source = "Mask",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 82.5 } },
				},
				NumPanel = RectangleMask {
					Inputs = {
						Filter = Input { Value = FuID { "Fast Gaussian" }, },
						MaskWidth = Input { Value = 3840, },
						MaskHeight = Input { Value = 2160, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { "None" }, },
						Height = Input { Value = 0.6, },
						Width = Input { Value = 0.4, },
					},
					ViewInfo = OperatorInfo { Pos = { -110, 82.5 } },
				},
				Merge2 = Merge {
					Inputs = {
						Background = Input {
							SourceOp = "Background1",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "Text1",
							Source = "Output",
						},
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -275, 16.5 } },
				},
				Merge3 = Merge {
					Inputs = {
						Background = Input {
							SourceOp = "Background1",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "Text2",
							Source = "Output",
						},
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -275, 148.5 } },
				}
			},
		}
	},
	ActiveTool = "EssentialFlippingNumbers"
}